<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<!--*******************配置数据源（apache的数据源）***********************-->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="com.mysql.jdbc.Driver" />
		<property name="driverUrl" value="jdbc:mysql://123.57.39.109:3306/smartproperty?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="user" value="xxxxxx" />
		<property name="password" value="xxxxxx" />
        <property name="prototypeCount" value="5"/>
        <property name="maximumConnectionCount" value="100"/>
        <property name="minimumConnectionCount" value="5"/>
        <property name="maximumActiveTime" value="100000"/>
        <property name="trace" value="true"/>
        <property name="verbose" value="true"/>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5InnoDBDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hiberante.cache.use_second_level_cache">false</prop>
			</props>
		</property>
		<!--加载域对象-->
		<property name="packagesToScan">
			<list>
				<value>com.zyd.xtgl.domain.vo</value>
				<value>com.zyd.report.domain.vo</value>
			</list>
		</property>
	</bean>
	<!-- 事务适配器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- aop 与事务联系 aopBean<->txAdvice  -->
	<aop:config proxy-target-class="true">
		<!-- 逻辑拦截，在manager包和子包中任意的方法执行 -->
		<aop:pointcut id="demoAopBean"
			expression="(execution(* com.zyd.xtgl.logic.*.*(..))) or (execution(* com.zyd.report.logic.*.*(..))) or (execution(* com.zyd.statistics.logic.*.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="demoAopBean" />
	</aop:config>
	<!-- 事务原子 具体方法进行什么事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" 
				rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="NoProductInStockException" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="NoProductInStockException" />
		</tx:attributes>
	</tx:advice>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- JavaMelody Monitoring DataSource  -->
	<bean id="springDataSourceBeanPostProcessor" class="net.bull.javamelody.SpringDataSourceBeanPostProcessor">
	</bean>

	<!-- 这个bean是为了注入ApplicationContext，方便在普通bean中获取Spring托管的bean -->
	<bean class="com.zyd.common.CreateResource"/>
</beans>